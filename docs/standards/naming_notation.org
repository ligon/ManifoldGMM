#+TITLE: ManifoldGMM ‚Äî Naming & Notation Standards
#+OPTIONS: toc:nil num:nil

* Purpose
Establish unambiguous, reusable standards for mathematical notation and API names
so that contributors (humans and LLMs) produce consistent code, docs, and examples.
These standards are authoritative for this repository and should be referenced by all
PRs and generated code.

* Scope
Applies to documentation, public APIs, internal modules, tests, figures, and examples
across the *geometry* layer (manifolds, points, tangent spaces, retractions) and the
*econometrics* layer (moments, GMM criteria, weighting, inference).

* 1. Canonical Symbol Table (Mathematics)
| Concept | Symbol | Description / Constraints |
|----------+---------+---------------------------|
| Parameter / point on manifold | Œ∏ | Primary estimation variable; may be a tuple (A, œë). |
| Observation index | i | i = 1,‚Ä¶,N |
| Number of observations | N | Positive integer |
| Moment function (per observation) | g_i(Œ∏) ‚àà ‚Ñù^‚Ñì | Vector-valued |
| Stacked/average moments | \bar g_N(Œ∏) = N^{-1}‚àë g_i(Œ∏) | Mean of moments |
| GMM criterion | J_N(Œ∏, W) = \bar g_N(Œ∏)' W \bar g_N(Œ∏) | W SPD unless specified |
| Weighting matrix | W | Typically Œ£ÃÇ^{-1} |
| Tangent space | T_Œ∏ M | Linear space with manifold metric |
| Retraction | Retr_Œ∏(Œæ) | Maps Œæ‚ààT_Œ∏ M ‚Üí M |
| Projection to tangent | Œ†_Œ∏(v) | Orthogonal projection wrt metric |
| Riemannian metric | ‚ü®Œæ,Œ∑‚ü©_Œ∏ | Inner product on T_Œ∏ M |
| Jacobian | D\bar g_N(Œ∏) | T_Œ∏ M ‚Üí ‚Ñù^‚Ñì |
| Adjoint | D\bar g_N(Œ∏)^* | ‚Ñù^‚Ñì ‚Üí T_Œ∏ M |
| Gauge | Œì(Œ∏) | Deterministic alignment map |

*Boumal consistency:* prefer Boumal‚Äôs notation where applicable.

- Euclidean dot product :: When working in an ambient Euclidean space use
  \(u \cdot v\) to denote the standard inner product. The equivalent matrix
  form \(u^\top v\) is acceptable when emphasising linear algebraic structure,
  but in prose prefer \(u \cdot v\) to avoid conflating the Euclidean dot with
  the manifold metric \(\langle \cdot, \cdot \rangle_\theta\).

* 2. Shapes & Types
- Document shapes using NumPy conventions: row-major arrays.
- Distinguish between *ambient* and *tangent* shapes.
- Specify shape for each return (e.g. ‚Äúreturns ‚Ñù^‚Ñì (shape (‚Ñì,))‚Äù).

* 3. Math ‚Üî Code Mapping
| Math | Code | Notes |
|-------+------+-------|
| ùìú | =Manifold= | Class representing manifold |
| Œ∏‚ààùìú | =ManifoldPoint= | Bundles manifold + coordinates |
| T_Œ∏ùìú | =TangentSpace= | Constructed from a ManifoldPoint |
| Retr | =retract= | Verb form |
| Œ† | =proj= | Projection to tangent space |
| exp_Œ∏ | =exp= | Only if exact exponential implemented |
| ‚ü®¬∑,¬∑‚ü©_Œ∏ | =inner= | (Œ∏, Œæ, Œ∑) ‚Üí scalar |
| D\bar g | =jacobian= | Returns linear operator |
| Adjoint | =adjoint= or =T_matvec= | In code: =T_matvec= |
| Œì | =gauge= | Deterministic alignment |

*Do not overload names.*  Keep =proj= strictly for tangent projection.

* 4. Function Naming Rules
1. Verbs for actions, nouns for types.
2. Prefix with =riem_= only when both Riemannian and Euclidean variants exist.
3. Randomness ‚Üí suffix _rng or explicit rng argument.
4. Side effects ‚Üí name with intent, e.g. =fit_= vs =estimate_=.
5. Use plural for batched ops.
6. Weighting matrices: =weighting_fixed=, =weighting_optimal_two_step=, =weighting_iterated=.
7. Diagnostics: =check_cond=, =check_psd=, =report_status=.

* 5. Jacobian Conventions (Critical)
- Primary object: D\bar g_N(Œ∏): T_Œ∏ M ‚Üí ‚Ñù^‚Ñì as linear operator with:
  - =matvec(xi)= for Œæ‚ààT_Œ∏ M
  - =T_matvec(w)= for w‚àà‚Ñù^‚Ñì ‚Üí T_Œ∏ M
- Always projected to tangent space.
- Euclidean Jacobians (J^euc) are internal only.
- Document ‚Ñì, manifold dimension, and batching dims.

* 6. Retractions, Projections, Gauges
- Retractions: =retract_qr=, =retract_polar=, =retract_exp=.
- Projections: =proj(theta, v)= ‚Üí Œ†_Œ∏(v).
- Gauges: =gauge(theta)= ‚Üí aligned representative.
- *Rule:* every step leaving T_Œ∏ M must pass through =retract=.

* 7. GMM Layer Terminology
- g_i(Œ∏): moment per observation.
- g_bar(Œ∏): average.
- J(Œ∏, W): GMM criterion.
- Weighting providers: =weighting_fixed=, =weighting_optimal_two_step=, =weighting_iterated=.
- Results container: =GMMResults= with fields:
  =theta_hat=, =obj_value=, =converged=, =se_tangent=, =cov_tangent=, =notes=.

* 8. Numerics & Tolerances
- Default dtype: float64.
- PSD enforcement: (A + A·µÄ)/2, clip negatives below eps_psd.
- Conditioning diagnostics: =cond(A)=, ridge/shrinkage documented.
- Tolerances: =tol_grad=, =tol_step=, =tol_fun=.

* 9. Errors, Warnings, Logging
| Type | Examples |
|-------+----------|
| Errors | =ManifoldError=, =RetractionError=, =ProjectionError=, =JacobianShapeError=, =WeightingError= |
| Warnings | =NumericalWarning=, =GaugeWarning=, =ConvergenceWarning= |

Logging levels: ERROR < WARNING < INFO < DEBUG < TRACE.

* 10. Documentation Conventions
- Docstrings: imperative first line (‚ÄúCompute‚Ä¶‚Äù, ‚ÄúProject‚Ä¶‚Äù)
- Include purpose, math definition, shapes, invariants, references.
- Figures: label axes, manifolds, base point Œ∏.
- Examples: use canonical symbols.

* 11. File / Module Naming
- Modules: lowercase_with_underscores.
- Classes: CamelCase.
- Functions: snake_case.
- Constants: ALL_CAPS.

* 12. Tests & Identities
- Tests named after property checked: =test_proj_idempotent=, =test_retract_local_isometry_first_order=.
- Finite-difference Jacobian checks and adjoint consistency tests required.

* 13. Assistant Guidance (‚ÄúAssistant Contract‚Äù)
1. Always consult this document before naming.
2. Preserve math‚Üîcode mapping.
3. Prefer Riemannian names.
4. Include shape annotations.
5. Avoid synonyms.
6. When in doubt, cite Boumal section/page.

#+begin_quote
*Pinned prompt for assistants:*
Use the ManifoldGMM Naming & Notation Standards. Map Œ∏, T_Œ∏M, Retr, Œ† to (=ManifoldPoint=, =TangentSpace=, =retract=, =proj=). Expose Jacobians as projected operators with =matvec=/=T_matvec=. No new synonyms. Include shapes and tolerances.
#+end_quote

* 14. Governance & Change Control
Changes to this document require a PR labeled =standards= with:
- Rationale and examples
- Impacted APIs
- Migration notes

Version tag in =docs/index.org= (e.g., ‚ÄúStandards v0.1‚Äù).
CI may enforce lint rules (naming collisions, etc.).

* 15. References
- N. Boumal, *An Introduction to Optimization on Smooth Manifolds*
- Hansen (1982); Newey & McFadden (1994)

*Status:* Standards v0.1 (living document)
